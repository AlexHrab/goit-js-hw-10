{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputFild = document.querySelector(\"#datetime-picker\");\nconst btn = document.querySelector(\"[data-start]\");\nconst day = document.querySelector(\"[data-days]\")\nconst hour = document.querySelector(\"[data-hours]\")\nconst minute = document.querySelector(\"[data-minutes]\")\nconst sec = document.querySelector(\"[data-seconds]\")\nbtn.disabled = true;\nlet userSelectedDate;\nlet intervalNumb;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      if(Date.now() > selectedDates[0].getTime()) \n      {return iziToast.warning({\n        message: 'Please choose a date in the future', position: \"center\", close: false, closeOnClick: true, progressBar: false, messageSize: 30, timeout: false\n    }),\n    btn.disabled = true\n    }else{\n     btn.disabled = false\n    }\n    userSelectedDate = selectedDates[0].getTime()\n    },\n  };\n\n  flatpickr(inputFild, options);\n  btn.addEventListener(\"click\", startTime);\n\nfunction startTime(){\n  inputFild.disabled = true\n  btn.disabled = true\n  intervalNumb = setInterval(() =>\n  {const diff = userSelectedDate - Date.now();\n    if (diff < 1000) stopTimer();\n    updateTimer(convertMs(diff))\n}, 1000)}\n\nfunction stopTimer(){\n  clearInterval(intervalNumb)\n}\n\nfunction addZero(num) {\n    return num.toString().padStart(2, '0');\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  day.innerHTML = addZero(days);\n  hour.innerHTML = addZero(hours);\n  minute.innerHTML = addZero(minutes);\n  sec.innerHTML = addZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["inputFild","btn","day","hour","minute","sec","userSelectedDate","intervalNumb","options","selectedDates","iziToast","flatpickr","startTime","diff","stopTimer","updateTimer","convertMs","addZero","num","days","hours","minutes","seconds","ms"],"mappings":"0IAKA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAM,SAAS,cAAc,cAAc,EAC3CC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAM,SAAS,cAAc,gBAAgB,EACnDJ,EAAI,SAAW,GACf,IAAIK,EACAC,EAEJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAG,KAAK,IAAK,EAAGA,EAAc,CAAC,EAAE,QAAS,EACzC,OAAOC,EAAS,QAAQ,CACvB,QAAS,qCAAsC,SAAU,SAAU,MAAO,GAAO,aAAc,GAAM,YAAa,GAAO,YAAa,GAAI,QAAS,EAC3J,CAAK,EACDT,EAAI,SAAW,GAEdA,EAAI,SAAW,GAEhBK,EAAmBG,EAAc,CAAC,EAAE,QAAS,CAC5C,CACL,EAEEE,EAAUX,EAAWQ,CAAO,EAC5BP,EAAI,iBAAiB,QAASW,CAAS,EAEzC,SAASA,GAAW,CAClBZ,EAAU,SAAW,GACrBC,EAAI,SAAW,GACfM,EAAe,YAAY,IAC3B,CAAC,MAAMM,EAAOP,EAAmB,KAAK,IAAG,EACnCO,EAAO,KAAMC,IACjBC,EAAYC,EAAUH,CAAI,CAAC,CAC/B,EAAG,GAAI,CAAC,CAER,SAASC,GAAW,CAClB,cAAcP,CAAY,CAC5B,CAEA,SAASU,EAAQC,EAAK,CAClB,OAAOA,EAAI,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASH,EAAY,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDpB,EAAI,UAAYe,EAAQE,CAAI,EAC5BhB,EAAK,UAAYc,EAAQG,CAAK,EAC9BhB,EAAO,UAAYa,EAAQI,CAAO,EAClChB,EAAI,UAAYY,EAAQK,CAAO,CACjC,CAEA,SAASN,EAAUO,EAAI,CAMrB,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAC1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EACpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EACjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}